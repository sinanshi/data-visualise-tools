data.abs.greencon2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.abs.con2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.wprod2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.ha2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
count<-0
#for(i in 1:(2005-1992+1)){
for(m in 1:NCELL){
for(j in 1:NCFT2){
data.y2[,j,m]<-ifelse((data.ha.in[,j,m]+data.ha.in[,j+NCFT2,m])>0,(data.y.in[,j,m]*data.ha.in[,j,m]+
data.y.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m])/(data.ha.in[,j,m]+data.ha.in[,j+NCFT2,m]),0)
data.prod2[,j,m]<-data.y.in[,j,m]*data.ha.in[,j,m]*(area.of.grid[m] / 100 / 100)+data.y.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m]*(area.of.grid[m] / 100 / 100) #in tons
data.abs.bluecon2[,j,m]<-data.bluecon.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m]*(area.of.grid[m] / 100 / 100) #in m3
data.abs.greencon2[,j,m]<-data.greencon.in[,j,m]*data.ha.in[,j,m]*(area.of.grid[m] / 100 / 100)+
data.greencon.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m]*(area.of.grid[m] / 100 / 100) #in m3
data.abs.con2[,j,m]<-data.abs.greencon2[,j,m]+data.abs.bluecon2[,j,m] #in m3
data.wprod2[,j,m]<-ifelse(data.abs.con2[,j,m]>0,data.prod2[,j,m]/data.abs.con2[,j,m],0)
data.ha2[,j,m]<-(data.ha.in[,j,m]+data.ha.in[,j+NCFT2,m])
}
}
#}
#convert to freshmatter
for(j in 1:NBANDS){
data.y.in[,j,]<-data.y.in[,j,]*W.CONTENT[j]
}
for(j in 1:NCFT2){
data.y2[,j,]<-data.y2[,j,]*W.CONTENT[j]
}
print("#######################################################################################")
print("WAT PROD for countries")
print("#######################################################################################")
# table definition
table.wprod2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.prod2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.wcons2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.harea2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
print("table declarations done")
for(i in 1:NYEARS){
# 1 sum up the harvested area * fraction of all pixels of a country, for a cft
for(j in 1:NCFT2){
table.harea2[,cft.names4[j],i]<-sum.region(data.ha.in[i,j,] *(area.of.grid / 100 / 100)+ data.ha.in[i,j+NCFT2,] *
(area.of.grid / 100 / 100), countries) # in ha
}
# 2 sum up abs water cons and production for a country
for(j in 1:NCFT2){
table.wcons2[,cft.names4[j],i]<-sum.region(data.abs.con2[i,j,], countries) # in m3
table.prod2[,cft.names4[j],i]<-sum.region(data.prod2[i,j,], countries) # in m3
}
} #end of year loop
# divide 2 by 1
table.wprod2<-ifelse(table.wcons2>0,table.prod2/table.wcons2,0)
print("division done")
print("#######################################################################################")
print("convert to kcal and average over cfts")
print("#######################################################################################")
#read conversion factors
conversion.kcal.ton<-read.table("/home/mfader/_AndereProjekte/USA/ConversionFactorsForCfts.csv",sep=",",header=TRUE,row.names=1,dec=".",quote="")
table.wprod2.kcal <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.prod2.kcal <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
for(i in 1:NYEARS){
for(j in 1:NCFT2){
table.prod2.kcal[,j,i]<-table.prod2[,j,i]*conversion.kcal.ton[,j] #in kcal
table.wprod2.kcal[,j,i]<-table.wprod2[,j,i]*conversion.kcal.ton[,j] #in kcal/m3
}
}
#calculate mean of yields over cfts in kcal per ha
table.wprod2.kcal[table.wprod2.kcal==0] <- NA
table.wprod2.kcal[table.wprod2.kcal==-999999] <- NA
table.wprod2.kcal.mean<-apply(table.wprod2.kcal[,,],3,rowMeans,na.rm = TRUE)
zz <- file(paste(loc.outputr,"waterProductivity_kcalperm3_197countries_meancfts_",NYEARS,"yr_","ctr.csv",sep=""),"w")
write.table(table.wprod2.kcal.mean,zz,sep=",",dec=".")
close(zz)
#
#     #calculate trend of yields and complete in EXCEL!!!!###################################################################################
#
#read completed series of average yield for years
table.wprod2.kcal.mean.com<-read.table(paste(loc.outputr,"waterProductivity_kcalperm3_197countries_meancfts_21yr_completed.csv",sep=""),sep=",",header=TRUE,dec=".",quote="")
if(PROD=="30LOWER") {
table.wprod2.kcal.mean.com[,3:23]<-table.wprod2.kcal.mean.com[,3:23]*0.7
SN<-paste(SN,"30LOWER",sep="_")
}
print("#######################################################################################")
print("Read RWR and calculate & write out  kcal per capita")
print("#######################################################################################")
#read available land
rwr.m3.cap<-read.table(paste(loc.inputwater,scenario,sep=""),sep=",",header=TRUE,dec=".",quote="")
#create intercept of country codes
country_common<-intersect(table.wprod2.kcal.mean.com[,1],rwr.m3.cap[,1])
#create table
kcal.cap<-table.wprod2.kcal.mean.com
kcal.cap[,3:23]<-kcal.cap[,3:23]*0
#calculate average kcal per cap on unused land
for(i in country_common){
kcal.cap[kcal.cap[,1]==i,3:23]<-table.wprod2.kcal.mean.com[table.wprod2.kcal.mean.com[,1]==i,3:23]*rwr.m3.cap[rwr.m3.cap[,1]==i,4:24]
}
zz <- file(paste(loc.outputr,"kcal_Per_Cap_ctr_21yrs_",SN,".csv",sep=""),"w")
write.table(kcal.cap,zz,sep=",",dec=".")
close(zz)
########################################################
print("calculation with coeff var")
#######################################################
rm(list=ls(all=TRUE))
gc()
require(fields)
library(maptools)
library("RColorBrewer")
library(raster)
require(lpjutil)
# M Fader 11.2015
# source("/home/mfader/_AndereProjekte/USA/water/water.r")
loc.inputr <-"/home/mfader/_R/InputR/"
irrig<-"lai/" #lai bench
irrigscenario<-"LAI" #LAI BENCH
loc.inputr <- "/home/mfader/_R/InputR/"
loc.outputlpj <- paste("/home/mfader/_AndereProjekte/MattiKummu/outputs_1901-2005/",irrig,sep="")
loc.inputpopu <-"/home/mfader/_AndereProjekte/USA/Population/"
loc.inputwater <-"/home/mfader/_AndereProjekte/USA/water/"
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/outputWithoutVarCoeff/"
#loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/outputVarCoeff/"
#loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output30PercentLess/" #in combi with both scenaios but sust See line 357!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scenario<-"RWR_NotSus_m3_Per_Cap_WithoutVarCoeff.csv"
#scenario<-"RWR_Sus43_m3_Per_Cap_WithoutVarCoeff.csv"
#scenario<-"RWR_Sus64_m3_Per_Cap_WithoutVarCoeff.csv"
PROD<-"NORMAL" # NORMAL or 30LOWER
SN<-"UNUSED"
#SN<-"SUST43"
#SN<-"SUST64
print("####################################################")
print("Scenario")
print(irrigscenario)
print("#####################################################")
path.function <- "/home/mfader/_R/Functions/"
#source(paste(path.function,"data_mean.r",sep=""))
#source(paste(path.function,"data_mean_month.r",sep=""))
source(paste(path.function,"data_mean_bands_nela.r",sep=""))
source(paste(path.function,"cell_area.r",sep=""))
source(paste(path.function,"sum_region_nela.r",sep=""))
source(paste(path.function,"map_flexible.r",sep=""))
HEADER<-43
NBANDS <- 32
SYEAR <- 1901
FYEAR <- c(2000)-SYEAR+1
LYEAR <- c(2005)-SYEAR+1
NYEARS<-(2005-1992+1)
YEARMEAN <- c("2000-2005")
NCELL <- 67420
if(NCELL==67420) {
GLOBAL<-TRUE
MED<-FALSE
NCOLS <- 360
NROWS <- 180
xlim1<--180.00
xlim2<-180.00
ylim1<--60.00
ylim2<-90.00
}
RES <- 0.5
REGION <- "pix"
CAL_YM<- T # calculations of yields
EXCEL_YM<- T #write out excels
PLOT_YM_NBANDS <- F # plots
PLOT_YM_NCFT <-F
CAL_CON<- T # calculations of yields
EXCEL_CON<- T #write out excels
PLOT_CON_TOTAL<- F
PLOT_CON_BANDS <- F # plots
GL_TABLES<-T
if(NBANDS==32){
#water content of fruits
#                     1   2   3   4   5   6   7   8   09  10 11  12   13  14   15  16
W.CONTENT <-  100 / c(88, 87, 88, 88, 90, 24, 35, 93, 91, 94, 92, 27, 100, 25 ,100 ,100,
88, 87, 88, 88, 90, 24, 35, 93, 91, 94, 92, 27, 100, 25,100 ,100) # values in percent of drymatter, e.g. wheat has 88 % of drymatter and 22% of water
NCFT2 <- 16
id.rain <- c(1:16)
id.irr <- c(17:32)
id.others <- c(13,29)
id.grass <- c(14,30)
cft.names4 <- c("1.wheat","2.rice","3.maize","4.millet","5.peas","6.sugar_beet","7.cassava","8.sunflower",
"9.soybean","10.gnuts","11.rapeseed","12.sugar_cane","13.others","14.mg","15.bio-energy grass", "16.bio-energy tree")
cft.names5 <- c("1.r.wheat","2.r.rice","3.r.maize","4.r.millet","5.r.peas","6.r.sugar_beet","7.r.cassava","8.r.sunflower",
"9.r.soybean","10.r.gnuts","11.r.rapeseed","12.r.sugar_cane","13.r.others","14.r.mg","15.r.bio-energy grass", "16.r.bio-energy tree",
"17.i.wheat","18.i.rice","19.i.maize","20.i.millet","21.i.peas","22.i.sugar_beet","23.i.cassava","24.i.sunflower","25.i.soybean",
"26.i.gnuts","27.i.rapeseed","28.i.sugar_cane","29.i.others","30.i.mg","31.i.bio_energy_grass","32.i.bio_energy_tree")
NBANDS3<-c(1:32)
NCFT3<-c(1:16)
}
VARIABLE<-c("Yield t/ha","Production t","Harvested Area 1000ha",
"Blue Consumption m3/ha", "Green Consumption m3/ha","Total Consumption m3/ha",
"Blue Consumption km3", "Green Consumption km3","Total Consumption km3",
"Blue to Green Consumption",
"Blue VWC m3/kg", "Green VWC m3/kg","Total VWC m3/kg")
# carbon content of dry matter
C.CONTENT <- 0.45
# grid file
zz <- file(paste(loc.outputlpj,"grid.bin",sep=""),"rb")
data <- array(0,dim=2*NCELL)
data <- readBin(zz, integer(), n=2*NCELL, size=2) / 100
lon<-data[c(1:NCELL)*2-1]
lat<-data[c(1:NCELL)*2]
ilon<<-ceiling(lon*2-min(lon)*2+1)
ilat<<-ceiling(lat*2-min(lat)*2+1)
close(zz)
print("grid done")
area.of.grid <- array(0,dim=NCELL)
for(i in 1:NCELL){
area.of.grid[i] <- grid.area(lat[i],RES,RES)
}
#map.area.of.grid <- map.f(area.of.grid,ilon,ilat,RES,NCELL,-99999,NCOLS,NROWS)
print("grid area done")
#country line for MED
zz <- file(paste("/home/mfader/_R/PlotInputs/in/global/inputs_longheader/","cow_mg_2006.bin",sep=""),"rb")
seek(zz, HEADER, origin = "start")
cow<-readBin(zz,integer(),n=NCELL*2,size=2)
close(zz)
print("countries read")
#separate country and regions
count<-0.5
countries1<-array(0,dim=c(NCELL,2))
for(m in 1:(NCELL*2)){
count<-count+0.5
if(m%%2==0) countries1[trunc(count),2]<-(cow[m]+1) else countries1[trunc(count),1]<-(cow[m]+1)
}
countries<-countries1[,1]
print("countries organize")
zz <- file(paste(loc.inputr,"cow_mg_2006.legend.ori.txt",sep=""),"r")
region.legend <- read.table(zz,sep=" ")
#region.legend[2] <- region.legend[2]
region.legend[2] <- region.legend[2]+1
close(zz)
read.output.yearblock<- function(filename, syear, lyear, start_year,
ncells, nyears, nbands, data.size = 4)
{
ind_year <- syear - start_year
file_out <- file(sprintf(filename),"rb")
pos_start <- data.size * (ind_year * nbands * ncells)
seek(file_out, where = pos_start, origin = "start")
data<-array(0,dim=c((lyear-syear+1),nbands,ncells))
for(i in 1:(lyear-syear+1)){
for(j in 1:nbands){
data[i,j,]<-readBin(file_out, numeric(), n = ncells, size = data.size)
}
}
close(file_out)
return(data)
}
######################################################################
######################################################################
######################
## yield [g DM / m2] #
######################
#for(i in 1:length(FYEAR)){
i<-1
# yields for pixel
###########################################################################################
#if(CAL_YM){
print("#######################################################################################")
print("READING YIELD")
print("#######################################################################################")
#read.output.yearblock<- function(filename, syear, lyear, start_year,
#                             ncells, nyears, nbands, data.size = 4)
data.y.in<-read.output.yearblock(paste(loc.outputlpj,"pft_harvest.pft.bin",sep=""),1992,2005,SYEAR,NCELL,105,NBANDS)
data.bluecon.in<-read.output.yearblock(paste(loc.outputlpj,"cft_consump_water_b.pft.bin",sep=""),1992,2005,SYEAR,NCELL,105,NBANDS)
data.greencon.in<-read.output.yearblock(paste(loc.outputlpj,"cft_consump_water_g.pft.bin",sep=""),1992,2005,SYEAR,NCELL,105,NBANDS)
data.ha.in<-read.output.yearblock(paste(loc.outputlpj,"cftfrac.bin",sep=""),1992,2005,SYEAR,NCELL,105,NBANDS)
#nyears, nbands, ncells
print("read inputs yield done")
# Unit  conversion [g C * frac / m2]
data.y.in <- (data.y.in / C.CONTENT / 10^6)  # to t/m2 drymatter
data.y.in <- data.y.in * 10^4 # to t/ha drymatter
data.bluecon.in<-data.bluecon.in*10 #from mm to m3 per ha
data.greencon.in<-data.greencon.in*10 #from mm to m3 per ha
print("#######################################################################################")
print("Making no separation rainfed irr")
print("#######################################################################################")
#create array without separation of irrigated and rainfed
data.y2<-array(0,dim=c(NYEARS,NCFT2,NCELL)) # yields (irrigated and rainfed)
data.prod2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.abs.bluecon2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.abs.greencon2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.abs.con2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.wprod2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
data.ha2<-array(0,dim=c(NYEARS,NCFT2,NCELL))
count<-0
#for(i in 1:(2005-1992+1)){
for(m in 1:NCELL){
for(j in 1:NCFT2){
data.y2[,j,m]<-ifelse((data.ha.in[,j,m]+data.ha.in[,j+NCFT2,m])>0,(data.y.in[,j,m]*data.ha.in[,j,m]+
data.y.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m])/(data.ha.in[,j,m]+data.ha.in[,j+NCFT2,m]),0)
data.prod2[,j,m]<-data.y.in[,j,m]*data.ha.in[,j,m]*(area.of.grid[m] / 100 / 100)+data.y.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m]*(area.of.grid[m] / 100 / 100) #in tons
data.abs.bluecon2[,j,m]<-data.bluecon.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m]*(area.of.grid[m] / 100 / 100) #in m3
data.abs.greencon2[,j,m]<-data.greencon.in[,j,m]*data.ha.in[,j,m]*(area.of.grid[m] / 100 / 100)+
data.greencon.in[,j+NCFT2,m]*data.ha.in[,j+NCFT2,m]*(area.of.grid[m] / 100 / 100) #in m3
data.abs.con2[,j,m]<-data.abs.greencon2[,j,m]+data.abs.bluecon2[,j,m] #in m3
data.wprod2[,j,m]<-ifelse(data.abs.con2[,j,m]>0,data.prod2[,j,m]/data.abs.con2[,j,m],0)
data.ha2[,j,m]<-(data.ha.in[,j,m]+data.ha.in[,j+NCFT2,m])
}
}
#}
#convert to freshmatter
for(j in 1:NBANDS){
data.y.in[,j,]<-data.y.in[,j,]*W.CONTENT[j]
}
for(j in 1:NCFT2){
data.y2[,j,]<-data.y2[,j,]*W.CONTENT[j]
}
print("#######################################################################################")
print("WAT PROD for countries")
print("#######################################################################################")
# table definition
table.wprod2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.prod2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.wcons2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.harea2 <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
print("table declarations done")
for(i in 1:NYEARS){
# 1 sum up the harvested area * fraction of all pixels of a country, for a cft
for(j in 1:NCFT2){
table.harea2[,cft.names4[j],i]<-sum.region(data.ha.in[i,j,] *(area.of.grid / 100 / 100)+ data.ha.in[i,j+NCFT2,] *
(area.of.grid / 100 / 100), countries) # in ha
}
# 2 sum up abs water cons and production for a country
for(j in 1:NCFT2){
table.wcons2[,cft.names4[j],i]<-sum.region(data.abs.con2[i,j,], countries) # in m3
table.prod2[,cft.names4[j],i]<-sum.region(data.prod2[i,j,], countries) # in m3
}
} #end of year loop
# divide 2 by 1
table.wprod2<-ifelse(table.wcons2>0,table.prod2/table.wcons2,0)
print("division done")
print("#######################################################################################")
print("convert to kcal and average over cfts")
print("#######################################################################################")
#read conversion factors
conversion.kcal.ton<-read.table("/home/mfader/_AndereProjekte/USA/ConversionFactorsForCfts.csv",sep=",",header=TRUE,row.names=1,dec=".",quote="")
table.wprod2.kcal <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
table.prod2.kcal <- array(0, dim=c(length(region.legend[[1]]), NCFT2,NYEARS), dimnames=list(region.legend[[1]],
cft.names4,(1+1991):(NYEARS+1991)))
for(i in 1:NYEARS){
for(j in 1:NCFT2){
table.prod2.kcal[,j,i]<-table.prod2[,j,i]*conversion.kcal.ton[,j] #in kcal
table.wprod2.kcal[,j,i]<-table.wprod2[,j,i]*conversion.kcal.ton[,j] #in kcal/m3
}
}
#calculate mean of yields over cfts in kcal per ha
table.wprod2.kcal[table.wprod2.kcal==0] <- NA
table.wprod2.kcal[table.wprod2.kcal==-999999] <- NA
table.wprod2.kcal.mean<-apply(table.wprod2.kcal[,,],3,rowMeans,na.rm = TRUE)
zz <- file(paste(loc.outputr,"waterProductivity_kcalperm3_197countries_meancfts_",NYEARS,"yr_","ctr.csv",sep=""),"w")
write.table(table.wprod2.kcal.mean,zz,sep=",",dec=".")
close(zz)
#
#     #calculate trend of yields and complete in EXCEL!!!!###################################################################################
#
#read completed series of average yield for years
table.wprod2.kcal.mean.com<-read.table(paste(loc.outputr,"waterProductivity_kcalperm3_197countries_meancfts_21yr_completed.csv",sep=""),sep=",",header=TRUE,dec=".",quote="")
if(PROD=="30LOWER") {
table.wprod2.kcal.mean.com[,3:23]<-table.wprod2.kcal.mean.com[,3:23]*0.7
SN<-paste(SN,"30LOWER",sep="_")
}
print("#######################################################################################")
print("Read RWR and calculate & write out  kcal per capita")
print("#######################################################################################")
#read available land
rwr.m3.cap<-read.table(paste(loc.inputwater,scenario,sep=""),sep=",",header=TRUE,dec=".",quote="")
#create intercept of country codes
country_common<-intersect(table.wprod2.kcal.mean.com[,1],rwr.m3.cap[,1])
#create table
kcal.cap<-table.wprod2.kcal.mean.com
kcal.cap[,3:23]<-kcal.cap[,3:23]*0
#calculate average kcal per cap on unused land
for(i in country_common){
kcal.cap[kcal.cap[,1]==i,3:23]<-table.wprod2.kcal.mean.com[table.wprod2.kcal.mean.com[,1]==i,3:23]*rwr.m3.cap[rwr.m3.cap[,1]==i,4:24]
}
zz <- file(paste(loc.outputr,"kcal_Per_Cap_ctr_21yrs_",SN,".csv",sep=""),"w")
write.table(kcal.cap,zz,sep=",",dec=".")
close(zz)
SN<-paste(SN,"VarCoeff",sep="_")
varCoeff.per<-read.table(paste(loc.inputwater,"country_prec-CoeffVar_2005-2009.csv",sep=""),sep=",",header=TRUE,dec=".",quote="")
rwr.m3.cap.coeff<-rwr.m3.cap
rwr.m3.cap.coeff[,4:24]<-rwr.m3.cap.coeff[,4:24]*0
country_common2<-intersect(rwr.m3.cap.coeff[,1],varCoeff.per[,1])
for(i in country_common2){
rwr.m3.cap.coeff[rwr.m3.cap.coeff[,1]==i,4:24]<-ifelse(rwr.m3.cap[rwr.m3.cap[,1]==i,4:24]>0,rwr.m3.cap[rwr.m3.cap[,1]==i,4:24]-(varCoeff.per[varCoeff.per[,1]==i,2]/100)*rwr.m3.cap[rwr.m3.cap[,1]==i,4:24],rwr.m3.cap[rwr.m3.cap[,1]==i,4:24]+(varCoeff.per[varCoeff.per[,1]==i,2]/100)*rwr.m3.cap[rwr.m3.cap[,1]==i,4:24])
}
#create intercept of country codes
country_common3<-intersect(table.wprod2.kcal.mean.com[,1],rwr.m3.cap.coeff[,1])
#create table
kcal.cap.coeff<-table.wprod2.kcal.mean.com
kcal.cap.coeff[,3:23]<-kcal.cap.coeff[,3:23]*0
#calculate average kcal per cap on unused land
for(i in country_common3){
kcal.cap.coeff[kcal.cap.coeff[,1]==i,3:23]<-table.wprod2.kcal.mean.com[table.wprod2.kcal.mean.com[,1]==i,3:23]*rwr.m3.cap.coeff[rwr.m3.cap.coeff[,1]==i,4:24]
}
zz <- file(paste(loc.outputr,"kcal_Per_Cap_ctr_21yrs_",SN,".csv",sep=""),"w")
write.table(kcal.cap.coeff,zz,sep=",",dec=".")
close(zz)
kcal.nec.ForfiftyPer<-read.table("/home/mfader/_AndereProjekte/USA/land/outputLandInclGrass/3000kcal_Per_Year_For50Per_Popu_ctr_21_yrs.csv",sep=",",header=TRUE,dec=".",quote="")
popu<-read.table(paste(loc.inputpopu,"Population_92-12_Codes.csv",sep=""),sep=",",header=TRUE,dec=".",quote="")
popu[is.na(popu)]<-0
min(kcal.cap)
min(kcal.cap[,3:23])
country_common6<-intersect(kcal.cap[,1],popu[,3])
norm.kcal.cap.nec<-array(0, dim=c(197,21))
norm.kcal.cap.nec<-cbind(kcal.cap[,1:2],norm.kcal.cap.nec)
for(i in country_common6){
norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23]<-ifelse(kcal.nec.ForfiftyPer[kcal.nec.ForfiftyPer[,3]==i,5:25]>0,(kcal.cap[kcal.cap[,1]==i,3:23]*(popu[popu[,3]==i,6:26]*1000)*0.5)/kcal.nec.ForfiftyPer[kcal.nec.ForfiftyPer[,3]==i,5:25],0)
norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23]<-ifelse(norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23]<0,0.001,norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23])
norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23]<-ifelse(norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23]>1,1,norm.kcal.cap.nec[norm.kcal.cap.nec[,1]==i,3:23])
}
zz <- file(paste(loc.outputr,"kcal_Per_Cap_WithExtraWater_21yrs_",SN,".csv",sep=""),"w")
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_NotSus/"
zz <- file(paste(loc.outputr,"kcal_Per_Cap_WithExtraWater_21yrs_",SN,".csv",sep=""),"w")
write.table(norm.kcal.cap.nec,zz,sep=",",dec=".")
close(zz)
save(norm.kcal.cap.nec,file = paste(loc.outputr,"norm_kcal_cap_",SN,".RData",sep=""))
rm(list=ls(all=TRUE))
gc()
require(fields)
library(maptools)
library("RColorBrewer")
require(lpjutil)
# M Fader 10.2015 maps yields output
# source("/home/mfader/_AndereProjekte/USA/land/land.r")
loc.inputr <-"/home/mfader/_R/InputR/"
irrig<-"lai/" #lai bench
irrigscenario<-"LAI" #LAI BENCH
loc.inputr <- "/home/mfader/_R/InputR/"
loc.outputlpj <- paste("/home/mfader/_AndereProjekte/MattiKummu/outputs_1901-2005/",irrig,sep="")
loc.inputpopu <-"/home/mfader/_AndereProjekte/USA/Population/"
loc.inputland <-"/home/mfader/_AndereProjekte/USA/land/"
#loc.outputr <-"/home/mfader/_AndereProjekte/USA/land/outputLandInclGrass/"
#loc.outputr <-"/home/mfader/_AndereProjekte/USA/land/outputLandExclGrass/"
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_NotSus/"
load(paste(loc.outputr,"norm_kcal_cap_UNUSED_NORMAL.RData",sep=""))
data<-norm.kcal.cap.nec
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_UNUSED_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_Sus64/"
load(paste(loc.outputr,"norm_kcal_cap_SUST64_NORMAL.RData",sep=""))
data<-norm.kcal.cap.nec
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_SUST64_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load("/home/mfader/_AndereProjekte/USA/water/output_normalProd_NotSus/norm_kcal_cap_UNUSED_NORMAL_VarCoeff.RData")
View(norm.kcal.cap.nec.coeff)
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_NotSus/"
load(paste(loc.outputr,"norm_kcal_cap_UNUSED_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_UNUSED_NORMAL.RData",sep=""))
data<-norm.kcal.cap.nec
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_UNUSED_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_Sus64/"
load(paste(loc.outputr,"norm_kcal_cap_SUST64_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_Sus43/"
load(paste(loc.outputr,"norm_kcal_cap_SUST43_NORMAL.RData",sep=""))
data<-norm.kcal.cap.nec
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_SUST43_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_LowerProd_Sus64/"
load(paste(loc.outputr,"norm_kcal_cap_SUST64_30LOWER.RData",sep=""))
data<-norm.kcal.cap.nec
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_SUST64_30LOWER_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_LowerProd_Sus43/"
load(paste(loc.outputr,"norm_kcal_cap_SUST43_30LOWER.RData",sep=""))
data<-norm.kcal.cap.nec
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
load(paste(loc.outputr,"norm_kcal_cap_SUST43_30LOWER_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
loc.outputr <-"/home/mfader/_AndereProjekte/USA/water/output_normalProd_Sus64/"
load(paste(loc.outputr,"norm_kcal_cap_SUST64_NORMAL_VarCoeff.RData",sep=""))
data<-norm.kcal.cap.nec.coeff
source("/home/mfader/_AndereProjekte/USA/plotsSinan/country_legend/country_legend/script.r")
gpl
